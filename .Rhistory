# Tracer le graphique de l'évolution de la SpO2
ggplot(donnees, aes(x = heure, y = spo2)) +
#geom_line() +
geom_line(aes(y = smoothed_spline), color = "red", size = 0.5) +
geom_hline(yintercept = spo2_max, linetype = "dashed", color = "red", size = 1) +
geom_hline(yintercept = spo2_min, linetype = "dashed", color = "blue", size = 1) +
geom_hline(yintercept = seuil, linetype = "dashed", color = "green", size = 1) +
geom_ribbon(data = data_sub_seuil, aes(ymin = spo2, ymax = seuil,group = grp), fill = "blue", alpha = 0.3) +
labs(title = "Évolution de la SpO2 au cours du temps",
x = "Temps",
y = "SpO2"
) +
legend("HB")
# Tracer le graphique de l'évolution de la SpO2
ggplot(donnees, aes(x = heure, y = spo2)) +
#geom_line() +
geom_line(aes(y = smoothed_spline), color = "red", size = 0.5) +
geom_hline(yintercept = spo2_max, linetype = "dashed", color = "red", size = 1) +
geom_hline(yintercept = spo2_min, linetype = "dashed", color = "blue", size = 1) +
geom_hline(yintercept = seuil, linetype = "dashed", color = "green", size = 1) +
geom_ribbon(data = data_sub_seuil, aes(ymin = spo2, ymax = seuil,group = grp), fill = "blue", alpha = 0.3) +
labs(title = "Évolution de la SpO2 au cours du temps",
x = "Temps",
y = "SpO2"
) +
legend("topright")
# Tracer le graphique de l'évolution de la SpO2
ggplot(donnees, aes(x = heure, y = spo2)) +
#geom_line() +
geom_line(aes(y = smoothed_spline), color = "red", size = 0.5) +
geom_hline(yintercept = spo2_max, linetype = "dashed", color = "red", size = 1) +
geom_hline(yintercept = spo2_min, linetype = "dashed", color = "blue", size = 1) +
geom_hline(yintercept = seuil, linetype = "dashed", color = "green", size = 1) +
geom_ribbon(data = data_sub_seuil, aes(ymin = spo2, ymax = seuil,group = grp), fill = "blue", alpha = 0.3) +
labs(title = "Évolution de la SpO2 au cours du temps",
x = "Temps",
y = "SpO2",
HB = "HB")
# Tracer le graphique de l'évolution de la SpO2
ggplot(donnees, aes(x = heure, y = spo2)) +
#geom_line() +
geom_label(aes(x = 80, y = max(values), label = paste("Moyenne =", round(calculated_value, 2))),
fill = "white", color = "black", size = 4) +  # Ajouter la boîte de texte
geom_line(aes(y = smoothed_spline), color = "red", size = 0.5) +
geom_hline(yintercept = spo2_max, linetype = "dashed", color = "red", size = 1) +
geom_hline(yintercept = spo2_min, linetype = "dashed", color = "blue", size = 1) +
geom_hline(yintercept = seuil, linetype = "dashed", color = "green", size = 1) +
geom_ribbon(data = data_sub_seuil, aes(ymin = spo2, ymax = seuil,group = grp), fill = "blue", alpha = 0.3) +
labs(title = "Évolution de la SpO2 au cours du temps",
x = "Temps",
y = "SpO2")
# Tracer le graphique de l'évolution de la SpO2
ggplot(donnees, aes(x = heure, y = spo2)) +
#geom_line() +
geom_label(aes(x = 80, y = max(values), label = paste("Moyenne =", round(HB, 2))),
fill = "white", color = "black", size = 4) +  # Ajouter la boîte de texte
geom_line(aes(y = smoothed_spline), color = "red", size = 0.5) +
geom_hline(yintercept = spo2_max, linetype = "dashed", color = "red", size = 1) +
geom_hline(yintercept = spo2_min, linetype = "dashed", color = "blue", size = 1) +
geom_hline(yintercept = seuil, linetype = "dashed", color = "green", size = 1) +
geom_ribbon(data = data_sub_seuil, aes(ymin = spo2, ymax = seuil,group = grp), fill = "blue", alpha = 0.3) +
labs(title = "Évolution de la SpO2 au cours du temps",
x = "Temps",
y = "SpO2")
# Tracer le graphique de l'évolution de la SpO2
ggplot(donnees, aes(x = heure, y = spo2)) +
#geom_line() +
geom_label(data = HB, aes(x = 80, y = max(values), label = paste("Moyenne =", round(HB, 2))),
fill = "white", color = "black", size = 4) +  # Ajouter la boîte de texte
geom_line(aes(y = smoothed_spline), color = "red", size = 0.5) +
geom_hline(yintercept = spo2_max, linetype = "dashed", color = "red", size = 1) +
geom_hline(yintercept = spo2_min, linetype = "dashed", color = "blue", size = 1) +
geom_hline(yintercept = seuil, linetype = "dashed", color = "green", size = 1) +
geom_ribbon(data = data_sub_seuil, aes(ymin = spo2, ymax = seuil,group = grp), fill = "blue", alpha = 0.3) +
labs(title = "Évolution de la SpO2 au cours du temps",
x = "Temps",
y = "SpO2")
# Tracer le graphique de l'évolution de la SpO2
ggplot(donnees, aes(x = heure, y = spo2)) +
#geom_line() +
geom_label(data = HB, aes( label = paste("Moyenne =", round(HB, 2))),
fill = "white", color = "black", size = 4) +  # Ajouter la boîte de texte
geom_line(aes(y = smoothed_spline), color = "red", size = 0.5) +
geom_hline(yintercept = spo2_max, linetype = "dashed", color = "red", size = 1) +
geom_hline(yintercept = spo2_min, linetype = "dashed", color = "blue", size = 1) +
geom_hline(yintercept = seuil, linetype = "dashed", color = "green", size = 1) +
geom_ribbon(data = data_sub_seuil, aes(ymin = spo2, ymax = seuil,group = grp), fill = "blue", alpha = 0.3) +
labs(title = "Évolution de la SpO2 au cours du temps",
x = "Temps",
y = "SpO2")
# Tracer le graphique de l'évolution de la SpO2
ggplot(donnees, aes(x = heure, y = spo2)) +
#geom_line() +
geom_label( aes( label = paste("Moyenne =", round(HB, 2))),
fill = "white", color = "black", size = 4) +  # Ajouter la boîte de texte
geom_line(aes(y = smoothed_spline), color = "red", size = 0.5) +
geom_hline(yintercept = spo2_max, linetype = "dashed", color = "red", size = 1) +
geom_hline(yintercept = spo2_min, linetype = "dashed", color = "blue", size = 1) +
geom_hline(yintercept = seuil, linetype = "dashed", color = "green", size = 1) +
geom_ribbon(data = data_sub_seuil, aes(ymin = spo2, ymax = seuil,group = grp), fill = "blue", alpha = 0.3) +
labs(title = "Évolution de la SpO2 au cours du temps",
x = "Temps",
y = "SpO2")
# Tracer le graphique de l'évolution de la SpO2
ggplot(donnees, aes(x = heure, y = spo2)) +
#geom_line() +
geom_line(aes(y = smoothed_spline), color = "red", size = 0.5) +
geom_hline(yintercept = spo2_max, linetype = "dashed", color = "red", size = 1) +
geom_hline(yintercept = spo2_min, linetype = "dashed", color = "blue", size = 1) +
geom_hline(yintercept = seuil, linetype = "dashed", color = "green", size = 1) +
geom_ribbon(data = data_sub_seuil, aes(ymin = spo2, ymax = seuil,group = grp), fill = "blue", alpha = 0.3) +
labs(title = "Évolution de la SpO2 au cours du temps",
x = "Temps",
y = "SpO2") +
annotate("text", x = min(donnees$heure), y = max(donnees$spo2),
label = paste("HB =", round(HB, 2)), hjust = 0, vjust = 1, color = "black") +
annotate("text", x = min(donnees$heure), y = max(donnees$spo2) - 5,
label = paste("REDTA =", round(REDTA, 2)), hjust = 0, vjust = 1, color = "black") +
theme_minimal()
# Tracer le graphique de l'évolution de la SpO2
ggplot(donnees, aes(x = heure, y = spo2)) +
#geom_line() +
geom_line(aes(y = smoothed_spline), color = "red", size = 0.5) +
geom_hline(yintercept = spo2_max, linetype = "dashed", color = "red", size = 1) +
geom_hline(yintercept = spo2_min, linetype = "dashed", color = "blue", size = 1) +
geom_hline(yintercept = seuil, linetype = "dashed", color = "green", size = 1) +
geom_ribbon(data = data_sub_seuil, aes(ymin = spo2, ymax = seuil,group = grp), fill = "blue", alpha = 0.3) +
labs(title = "Évolution de la SpO2 au cours du temps",
x = "Temps",
y = "SpO2") +
annotate("text", x = max(donnees$heure), y = max(donnees$spo2),
label = paste("HB =", round(HB, 2), "\nREDTA =", round(REDTA, 2)),
hjust = 1, vjust = 1, color = "black", size = 4,
family = "sans", face = "bold") +
theme_minimal()
# Tracer le graphique de l'évolution de la SpO2
ggplot(donnees, aes(x = heure, y = spo2)) +
#geom_line() +
geom_line(aes(y = smoothed_spline), color = "red", size = 0.5) +
geom_hline(yintercept = spo2_max, linetype = "dashed", color = "red", size = 1) +
geom_hline(yintercept = spo2_min, linetype = "dashed", color = "blue", size = 1) +
geom_hline(yintercept = seuil, linetype = "dashed", color = "green", size = 1) +
geom_ribbon(data = data_sub_seuil, aes(ymin = spo2, ymax = seuil,group = grp), fill = "blue", alpha = 0.3) +
labs(title = "Évolution de la SpO2 au cours du temps",
x = "Temps",
y = "SpO2") +
annotate("text", x = max(donnees$heure), y = max(donnees$spo2)-10,
label = paste("HB =", round(HB, 2), "\nREDTA =", round(REDTA, 2)),
hjust = 1, vjust = 1, color = "black", size = 4,
family = "sans", face = "bold") +
theme_minimal()
# Tracer le graphique de l'évolution de la SpO2
ggplot(donnees, aes(x = heure, y = spo2)) +
#geom_line() +
geom_line(aes(y = smoothed_spline), color = "red", size = 0.5) +
geom_hline(yintercept = spo2_max, linetype = "dashed", color = "red", size = 1) +
geom_hline(yintercept = spo2_min, linetype = "dashed", color = "blue", size = 1) +
geom_hline(yintercept = seuil, linetype = "dashed", color = "green", size = 1) +
geom_ribbon(data = data_sub_seuil, aes(ymin = spo2, ymax = seuil,group = grp), fill = "blue", alpha = 0.3) +
labs(title = "Évolution de la SpO2 au cours du temps",
x = "Temps",
y = "SpO2") +
annotate("text", x = max(donnees$heure), y = max(donnees$spo2)-5,
label = paste("HB =", round(HB, 2), "\nREDTA =", round(REDTA, 2)),
hjust = 1, vjust = 1, color = "black", size = 4,
family = "sans", face = "bold") +
theme_minimal()
# Tracer le graphique de l'évolution de la SpO2
ggplot(donnees, aes(x = heure, y = spo2)) +
#geom_line() +
geom_line(aes(y = smoothed_spline), color = "red", size = 0.5) +
geom_hline(yintercept = spo2_max, linetype = "dashed", color = "red", size = 1) +
geom_hline(yintercept = spo2_min, linetype = "dashed", color = "blue", size = 1) +
geom_hline(yintercept = seuil, linetype = "dashed", color = "green", size = 1) +
geom_ribbon(data = data_sub_seuil, aes(ymin = spo2, ymax = seuil,group = grp), fill = "blue", alpha = 0.3) +
labs(title = "Évolution de la SpO2 au cours du temps",
x = "Temps",
y = "SpO2") +
annotate("text", x = max(donnees$heure), y = max(donnees$spo2)-5,
label = paste("HB =", round(HB, 5), "\nREDTA =", round(REDTA, 5)),
hjust = 1, vjust = 1, color = "black", size = 4,
family = "sans", face = "bold") +
theme_minimal()
# Tracer le graphique de l'évolution de la SpO2
ggplot(donnees, aes(x = heure, y = spo2)) +
#geom_line() +
geom_line(aes(y = smoothed_spline), color = "red", size = 0.5) +
geom_hline(yintercept = spo2_max, linetype = "dashed", color = "red", size = 1) +
geom_hline(yintercept = spo2_min, linetype = "dashed", color = "blue", size = 1) +
geom_hline(yintercept = seuil, linetype = "dashed", color = "green", size = 1) +
geom_ribbon(data = data_sub_seuil, aes(ymin = spo2, ymax = seuil,group = grp), fill = "blue", alpha = 0.3) +
labs(title = "Évolution de la SpO2 au cours du temps",
x = "Temps",
y = "SpO2") +
annotate("text", x = max(donnees$heure), y = max(donnees$spo2)-5,
label = paste("HB =", round(HB, 5)*100, "\nREDTA =", round(REDTA, 5)*100),
hjust = 1, vjust = 1, color = "black", size = 4,
family = "sans", face = "bold") +
theme_minimal()
# Tracer le graphique de l'évolution de la SpO2
ggplot(donnees, aes(x = heure, y = spo2)) +
#geom_line() +
geom_line(aes(y = smoothed_spline), color = "red", size = 0.5) +
geom_hline(yintercept = spo2_max, linetype = "dashed", color = "red", size = 1) +
geom_hline(yintercept = spo2_min, linetype = "dashed", color = "blue", size = 1) +
geom_hline(yintercept = seuil, linetype = "dashed", color = "green", size = 1) +
geom_ribbon(data = data_sub_seuil, aes(ymin = spo2, ymax = seuil,group = grp), fill = "blue", alpha = 0.3) +
labs(title = "Évolution de la SpO2 au cours du temps",
x = "Temps",
y = "SpO2") +
annotate("text", x = max(donnees$heure), y = max(donnees$spo2)-5,
label = paste("HB =", round(HB, 5)*100, "\nREDTA =", round(REDTA, 5)*100),
hjust = 1, vjust = 1, color = "black", size = 4) +
theme_minimal()
# Tracer le graphique de l'évolution de la SpO2
ggplot(donnees, aes(x = heure, y = spo2)) +
#geom_line() +
geom_line(aes(y = smoothed_spline), color = "red", size = 0.5) +
geom_hline(yintercept = spo2_max, linetype = "dashed", color = "red", size = 1) +
geom_hline(yintercept = spo2_min, linetype = "dashed", color = "blue", size = 1) +
geom_hline(yintercept = seuil, linetype = "dashed", color = "green", size = 1) +
geom_ribbon(data = data_sub_seuil, aes(ymin = spo2, ymax = seuil,group = grp), fill = "blue", alpha = 0.3) +
labs(title = "Évolution de la SpO2 au cours du temps",
x = "Temps",
y = "SpO2") +
annotate("text", x = max(donnees$heure), y = max(donnees$spo2)-5,
label = paste("HB =", round(HB, 5)*100, "\nREDTA =", round(REDTA, 5)*100),
hjust = 1, vjust = 1, color = "black", size = 4)
# Tracer le graphique de l'évolution de la SpO2
ggplot(donnees, aes(x = heure, y = spo2)) +
#geom_line() +
geom_line(aes(y = smoothed_spline), color = "red", size = 0.5) +
geom_hline(yintercept = spo2_max, linetype = "dashed", color = "red", size = 1) +
geom_hline(yintercept = spo2_min, linetype = "dashed", color = "blue", size = 1) +
geom_hline(yintercept = seuil, linetype = "dashed", color = "green", size = 1) +
geom_ribbon(data = data_sub_seuil, aes(ymin = spo2, ymax = seuil,group = grp), fill = "blue", alpha = 0.3) +
labs(title = "Évolution de la SpO2 au cours du temps",
x = "Temps",
y = "SpO2") +
annotate("text", x = max(donnees$heure), y = max(donnees$spo2)-5,
label = paste("HB =", round(HB, 5)*100, "%", "\nREDTA =", round(REDTA, 5)*100),
hjust = 1, vjust = 1, color = "black", size = 4)
# Tracer le graphique de l'évolution de la SpO2
ggplot(donnees, aes(x = heure, y = spo2)) +
#geom_line() +
geom_line(aes(y = smoothed_spline), color = "red", size = 0.5) +
geom_hline(yintercept = spo2_max, linetype = "dashed", color = "red", size = 1) +
geom_hline(yintercept = spo2_min, linetype = "dashed", color = "blue", size = 1) +
geom_hline(yintercept = seuil, linetype = "dashed", color = "green", size = 1) +
geom_ribbon(data = data_sub_seuil, aes(ymin = spo2, ymax = seuil,group = grp), fill = "blue", alpha = 0.3) +
labs(title = "Évolution de la SpO2 au cours du temps",
x = "Temps",
y = "SpO2") +
annotate("text", x = max(donnees$heure), y = max(donnees$spo2)-5,
label = paste("HB =", round(HB, 5)*100, "%", "\nREDTA =", round(REDTA, 5)*100),"%h",
hjust = 1, vjust = 1, color = "black", size = 4)
# Tracer le graphique de l'évolution de la SpO2
ggplot(donnees, aes(x = heure, y = spo2)) +
#geom_line() +
geom_line(aes(y = smoothed_spline), color = "red", size = 0.5) +
geom_hline(yintercept = spo2_max, linetype = "dashed", color = "red", size = 1) +
geom_hline(yintercept = spo2_min, linetype = "dashed", color = "blue", size = 1) +
geom_hline(yintercept = seuil, linetype = "dashed", color = "green", size = 1) +
geom_ribbon(data = data_sub_seuil, aes(ymin = spo2, ymax = seuil,group = grp), fill = "blue", alpha = 0.3) +
labs(title = "Évolution de la SpO2 au cours du temps",
x = "Temps",
y = "SpO2") +
annotate("text", x = max(donnees$heure), y = max(donnees$spo2)-5,
label = paste("HB =", round(HB, 5)*100, "%", "\nREDTA =", round(REDTA, 5)*100,,"%h"),
hjust = 1, vjust = 1, color = "black", size = 4)
# Tracer le graphique de l'évolution de la SpO2
ggplot(donnees, aes(x = heure, y = spo2)) +
#geom_line() +
geom_line(aes(y = smoothed_spline), color = "red", size = 0.5) +
geom_hline(yintercept = spo2_max, linetype = "dashed", color = "red", size = 1) +
geom_hline(yintercept = spo2_min, linetype = "dashed", color = "blue", size = 1) +
geom_hline(yintercept = seuil, linetype = "dashed", color = "green", size = 1) +
geom_ribbon(data = data_sub_seuil, aes(ymin = spo2, ymax = seuil,group = grp), fill = "blue", alpha = 0.3) +
labs(title = "Évolution de la SpO2 au cours du temps",
x = "Temps",
y = "SpO2") +
annotate("text", x = max(donnees$heure), y = max(donnees$spo2)-5,
label = paste("HB =", round(HB, 5)*100, "%", "\nREDTA =", round(REDTA, 5)*100,"%h"),
hjust = 1, vjust = 1, color = "black", size = 4)
# Somme des aires de chaque groupe
HB <- 60*sum(data_sub_seuil_aire$aire_sous_seuil)duree_totale #%
# Somme des aires de chaque groupe
HB <- 60*sum(data_sub_seuil_aire$aire_sous_seuil)/duree_totale #%
library(tidyverse)
library(lubridate)
library(ggplot2)
library(DescTools)
library(zoo)
# Chemin vers votre fichier .asc
file_path <- "~/Documents/DU DATAS/STAGE/HYPOXPERF - SpO2/BESSON ACHILLE - 01-12-2024.asc"
# Lire le fichier en ignorant les 10 premières lignes
data <- read.csv(file_path, skip = 20, header = FALSE, sep = ",", stringsAsFactors = FALSE)
# Définir les seuils
spo2_max <- 95
spo2_min <- 85
seuil <- 92
donnees <- data %>%
select(-V1) %>%
rename(annee = V2,
mois = V3,
jour = V4,
heure = V5,
minute = V6,
seconde = V7,
pouls = V8,
spo2 = V9) %>%
mutate(date = make_datetime(annee, mois, jour, heure, minute, seconde)) %>%
select(date, spo2) %>%
separate(date, into = c("date", "heure"),sep =" ") %>%
filter(spo2 < spo2_max, spo2 > spo2_min) %>%
mutate(heure = ymd_hms(paste(date, heure)))
donnees <- donnees %>%
mutate(interval = as.numeric(difftime(heure, lag(heure, default = first(heure)), units = "secs"))) %>%
mutate(duree_cumulee = cumsum(interval)) %>%
mutate(num = row_number()) %>%
mutate(sous_seuil = spo2 < seuil) %>%
group_by(grp = cumsum(c(FALSE, diff(sous_seuil) != 0))) %>%
ungroup()
#Calcul de la durée totale
duree_totale <- tail(donnees$duree_cumulee,1)
#Filtrage des données en dessous du seuil
data_sub_seuil <- donnees %>%
filter(sous_seuil)
# Calculer l'aire sous le seuil pour chaque groupe
data_sub_seuil_aire <- data_sub_seuil %>%
group_by(grp) %>%
summarise(aire_sous_seuil = AUC(as.numeric(heure), abs(spo2-seuil), na.rm = TRUE)) %>%
replace_na(list(aire_sous_seuil = 0))
# Somme des aires de chaque groupe
HB <- 60*sum(data_sub_seuil_aire$aire_sous_seuil)/duree_totale #%min
REDTA <- sum(data_sub_seuil_aire$aire_sous_seuil)/3600 #%h
# Utiliser des splines de lissage
smooth_spline <- smooth.spline(donnees$heure, donnees$spo2)
donnees$heure_numeric <- as.numeric(donnees$heure)
donnees$smoothed_spline <- predict(smooth_spline, donnees$heure_numeric)$y
# Tracer le graphique de l'évolution de la SpO2
ggplot(donnees, aes(x = heure, y = spo2)) +
#geom_line() +
geom_line(aes(y = smoothed_spline), color = "red", size = 0.5) +
geom_hline(yintercept = spo2_max, linetype = "dashed", color = "red", size = 1) +
geom_hline(yintercept = spo2_min, linetype = "dashed", color = "blue", size = 1) +
geom_hline(yintercept = seuil, linetype = "dashed", color = "green", size = 1) +
geom_ribbon(data = data_sub_seuil, aes(ymin = spo2, ymax = seuil,group = grp), fill = "blue", alpha = 0.3) +
labs(title = "Évolution de la SpO2 au cours du temps",
x = "Temps",
y = "SpO2") +
annotate("text", x = max(donnees$heure), y = max(donnees$spo2)-5,
label = paste("HB =", round(HB, 5), "%", "\nREDTA =", round(REDTA, 5),"%h"),
hjust = 1, vjust = 1, color = "black", size = 4)
# Chemin vers votre fichier .asc
file_path <- "~/Documents/DU DATAS/STAGE/HYPOXPERF - SpO2/DODET SANDRA - 09-08-2023.asc"
source("~/Documents/DU DATAS/STAGE/HYPOXPERF - SpO2/step1.R", echo=TRUE)
source("~/Documents/DU DATAS/STAGE/HYPOXPERF - SpO2/step1.R", echo=TRUE)
source("~/Documents/DU DATAS/STAGE/HYPOXPERF - SpO2/step1.R", echo=TRUE)
shiny::runApp('Documents/DU DATAS/STAGE/HYPOXPERF - SpO2/_hypoxperf_spo2-app')
library(tidyverse)
library(lubridate)
library(ggplot2)
library(DescTools)
library(zoo)
# Chemin vers le dossier "PROD"
prod_folder <- "~/Documents/DU DATAS/STAGE/HYPOXPERF - SpO2/_hypoxperf_spo2-app/data/PROD"
# Fonction pour traiter un fichier .asc
process_file <- function(file_path, seuil, spo2_max, spo2_min) {
# Lire le fichier en ignorant les 20 premières lignes et gérer l'encodage
data <- tryCatch({
read.csv(file_path, skip = 20, header = FALSE, sep = ",", stringsAsFactors = FALSE, fileEncoding = "UTF-8")
}, error = function(e) {
cat("Erreur lors de la lecture du fichier :", file_path, "\n", e$message, "\n")
return(NULL)  # Retourne NULL si une erreur survient
})
# Si la lecture a échoué, arrêter le traitement pour ce fichier
if (is.null(data)) {
return(NULL)
}
# Nettoyer les caractères non valides
data[] <- lapply(data, function(x) if (is.character(x)) iconv(x, from = "UTF-8", to = "UTF-8", sub = "") else x)
# Préparer les données
donnees <- tryCatch({
data %>%
select(-V1) %>%
rename(annee = V2,
mois = V3,
jour = V4,
heure = V5,
minute = V6,
seconde = V7,
pouls = V8,
spo2 = V9) %>%
mutate(date = make_datetime(annee, mois, jour, heure, minute, seconde)) %>%
select(date, spo2) %>%
separate(date, into = c("date", "heure"), sep = " ") %>%
filter(spo2 < spo2_max, spo2 > spo2_min) %>%
mutate(heure = ymd_hms(paste(date, heure))) %>%
mutate(num = row_number()) %>%
mutate(duree_cumulee = num * 4) %>%
mutate(sous_seuil = spo2 < seuil) %>%
group_by(grp = cumsum(c(FALSE, diff(sous_seuil) != 0))) %>%
ungroup()
}, error = function(e) {
cat("Erreur lors du traitement des données dans le fichier :", file_path, "\n", e$message, "\n")
return(NULL)  # Retourne NULL si une erreur survient
})
# Si le traitement des données a échoué, arrêter le traitement pour ce fichier
if (is.null(donnees)) {
return(NULL)
}
# Calculs
duree_totale <- tail(donnees$duree_cumulee, 1)
data_sub_seuil <- donnees %>%
filter(sous_seuil)
data_sub_seuil_aire <- data_sub_seuil %>%
group_by(grp) %>%
summarise(aire_sous_seuil = AUC(as.numeric(heure), abs(spo2 - seuil), na.rm = TRUE)) %>%
replace_na(list(aire_sous_seuil = 0))
HB <- 60 * sum(data_sub_seuil_aire$aire_sous_seuil) / duree_totale
REDTA <- sum(data_sub_seuil_aire$aire_sous_seuil) / 3600
return(list(HB = HB, REDTA = REDTA, duree_totale = duree_totale))
}
# Nouvelle fonction pour traiter les données d'un athlète spécifique
process_athlete_data <- function(athlete_name, seuil, spo2_max = 95, spo2_min = 85) {
results <- list()
athlete_folder <- file.path(prod_folder, athlete_name)
if (!file.exists(athlete_folder)) {
cat("Le dossier pour l'athlète", athlete_name, "n'existe pas.\n")
return(NULL)
}
stages <- list.dirs(athlete_folder, recursive = FALSE)
for (stage in stages) {
stage_name <- basename(stage)
asc_files <- list.files(stage, pattern = "\\.asc$", full.names = TRUE)
for (file in asc_files) {
cat("Processing:", athlete_name, "-", stage_name, "-", basename(file), "\n")
result <- process_file(file, seuil, spo2_max, spo2_min)
# Ignorer les fichiers avec des erreurs
if (is.null(result)) {
cat("Erreur dans ce fichier :", file, "- Ignoré.\n")
next
}
results <- append(results, list(list(athlete = athlete_name, stage = stage_name, file = basename(file), result = result)))
}
}
# Convertir les résultats en DataFrame
results_df <- do.call(rbind, lapply(results, function(x) {
data.frame(
Athlete = x$athlete,
Stage = x$stage,
File = x$file,
HB = x$result$HB,
REDTA = x$result$REDTA,
DureeTotale = x$result$duree_totale
)
}))
return(results_df)
}
# Exemple d'utilisation de la fonction
athlete_name <- "Achille BESSON"
seuil <- 92
results_df <- process_athlete_data(athlete_name, seuil)
View(results_df)
# Exemple d'utilisation de la fonction
athlete_name <- "Achille BESSON"
seuil <- 91
results_df <- process_athlete_data(athlete_name, seuil)
# Afficher les résultats
print(results_df)
View(results_df)
# Exemple d'utilisation de la fonction
athlete_name <- "Achille BESSON"
seuil <- 90
results_df2 <- process_athlete_data(athlete_name, seuil)
View(results_df)
View(results_df2)
View(results_df)
View(results_df2)
runApp('Documents/DU DATAS/STAGE/HYPOXPERF - SpO2/_hypoxperf_spo2-app')
runApp('Documents/DU DATAS/STAGE/HYPOXPERF - SpO2/_hypoxperf_spo2-app')
runApp('Documents/DU DATAS/STAGE/HYPOXPERF - SpO2/_hypoxperf_spo2-app')
runApp('Documents/DU DATAS/STAGE/HYPOXPERF - SpO2/_hypoxperf_spo2-app')
runApp('Documents/DU DATAS/STAGE/HYPOXPERF - SpO2/_hypoxperf_spo2-app')
runApp('Documents/DU DATAS/STAGE/HYPOXPERF - SpO2/_hypoxperf_spo2-app')
runApp('Documents/DU DATAS/STAGE/HYPOXPERF - SpO2/_hypoxperf_spo2-app')
runApp('Documents/DU DATAS/STAGE/HYPOXPERF - SpO2/_hypoxperf_spo2-app')
runApp('Documents/DU DATAS/STAGE/HYPOXPERF - SpO2/_hypoxperf_spo2-app')
runApp('Documents/DU DATAS/STAGE/HYPOXPERF - SpO2/_hypoxperf_spo2-app')
runApp('Documents/DU DATAS/STAGE/HYPOXPERF - SpO2/_hypoxperf_spo2-app')
runApp('Documents/DU DATAS/STAGE/HYPOXPERF - SpO2/_hypoxperf_spo2-app')
runApp('Documents/DU DATAS/STAGE/HYPOXPERF - SpO2/_hypoxperf_spo2-app')
runApp('Documents/DU DATAS/STAGE/HYPOXPERF - SpO2/_hypoxperf_spo2-app')
runApp('Documents/DU DATAS/STAGE/HYPOXPERF - SpO2/_hypoxperf_spo2-app')
runApp('Documents/DU DATAS/STAGE/HYPOXPERF - SpO2/_hypoxperf_spo2-app')
runApp('Documents/DU DATAS/STAGE/HYPOXPERF - SpO2/_hypoxperf_spo2-app')
runApp('Documents/DU DATAS/STAGE/HYPOXPERF - SpO2/_hypoxperf_spo2-app')
runApp('Documents/DU DATAS/STAGE/HYPOXPERF - SpO2/_hypoxperf_spo2-app')
runApp('Documents/DU DATAS/STAGE/HYPOXPERF - SpO2/_hypoxperf_spo2-app')
runApp('Documents/DU DATAS/STAGE/HYPOXPERF - SpO2/_hypoxperf_spo2-app')
runApp('Documents/DU DATAS/STAGE/HYPOXPERF - SpO2/_hypoxperf_spo2-app')
runApp('Documents/DU DATAS/STAGE/HYPOXPERF - SpO2/_hypoxperf_spo2-app')
runApp('Documents/DU DATAS/STAGE/HYPOXPERF - SpO2/_hypoxperf_spo2-app')
runApp('Documents/DU DATAS/STAGE/HYPOXPERF - SpO2/_hypoxperf_spo2-app')
runApp('Documents/DU DATAS/STAGE/HYPOXPERF - SpO2/_hypoxperf_spo2-app')
runApp('Documents/DU DATAS/STAGE/HYPOXPERF - SpO2/_hypoxperf_spo2-app')
runApp('Documents/DU DATAS/STAGE/HYPOXPERF - SpO2/_hypoxperf_spo2-app')
runApp('Documents/DU DATAS/STAGE/HYPOXPERF - SpO2/_hypoxperf_spo2-app')
runApp('Documents/DU DATAS/STAGE/HYPOXPERF - SpO2/_hypoxperf_spo2-app')
runApp('Documents/DU DATAS/STAGE/HYPOXPERF - SpO2/_hypoxperf_spo2-app')
runApp('Documents/DU DATAS/STAGE/HYPOXPERF - SpO2/_hypoxperf_spo2-app')
